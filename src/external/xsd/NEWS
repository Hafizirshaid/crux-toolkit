Version 0.3.9

  * Ignore subdirectories which already have solution VC files in the meta
    subsystem.

  * Add support for the same-directory VC project/solution setup in the meta
    subsystem.

  * Add support for VC projects residing in subdirectories in the meta
    subsystem.

  * Use todos/fromdos instead of deprecated dos2unix/unix2dos.

Version 0.3.8

  * Escape # in the second expansion in the message function. The
    double-escaping of # in build rules is no longer necessary.

  * New subsystem, meta, that is used for building other build
    systems. Currently supported: autoconf, automake, VC++ 9.0,
    VC++ 10.0, and VC++ tests.

  * New subsystem, dist, that is used for preparing distributions.

Version 0.3.7

  * Do not treat files with relative paths as generated.

Version 0.3.6

  * Search for shared libraries before static.

Version 0.3.5

  * New subsystem, ld, that is used by both c and cxx subsystems.

  * Support for generic C and C++ compilers.

  * Follow symlinks in the install-dir function.

  * Various optimizations, including for the upcoming GNU make 3.82.

  * Updated config.guess and config.sub.

Version 0.3.4

  * C compilation subsystem. Supported compilers are GNU gcc and Intel icc.

  * Git .gitignore generation subsystem.

  * Fallback install-sh installation script.

  * Reworked sed scripts not to use GNU extensions.

Version 0.3.3

  * Fix a bug in C++ dependency processing sed script.

Version 0.3.2

  * Add read_value to build/dialog.bash

  * Fix problem with potentially installed generated header files and
    automatic dependency extraction. While at it, factored out dependency
    post-processing into a separate script.

Version 0.3.1

  * Minor changes to the xargs and sed usage to make it not rely
    on non-POSIX features.

Version 0.3.0

  * Format of the library file (.l) has changed to include rpath
    properties.

  * Adding dynamic library paths (via rpath) is now optional.

  * Paths from extra ld options are now extracted and propagated
    to make (via vpath).

Version 0.2.2

  * Configuration scripts now ask for ar and ranlib if static library
    is selected. This is mainly useful for cross-compilation.

  * The C++ configuration script now ask for extra preprocessor, compiler,
    and linker options as well as extra libraries to link with. There
    are also corresponding command-line variables, cxx_pp_options,
    cxx_options, cxx_ld_options, and cxx_libs, that, if set, the script
    will silently use instead of asking.

Version 0.2.1

  * Build/host/target system detection is now in the system.make file and
    not automatically included by bootstrap.make. The host_system and
    target_system make variables should be used to set host and target
    systems during configuration.

  * The include.make file was moved one level up from install directory.

Version 0.2.0

  * This release is backwards-incompatible with the 0.1 series.

  * Unified load and import facilities. Now import requires full file name.

  * A target from an imported makefile cannot become the default target.

  * Frame facility now restores all variables and preservs their flavor.

  * New unified clean suffix scheme: <.out><.src>.clean, e.g.,

      %.o: %.cxx  ->  %.o.cxx.clean:
      %: %.o      ->  %.o.clean:
      %: %.m4     ->  %.m4.clean:

  * Got rid of the .e suffix in the executable building rules.

Version 0.1.15

  * Experimental cxx_ld_options make command-line variable is now
    recognized and saved during the configuration stage.

  * Import mechanism now uses unconditional include instead of
    include-once.

  * New installation variables (doc, man, info) were added to
    build/install/configuration.make.

Version 0.1.14

  * New translator: m4.

  * New C/C++ automatic dependency generation mechanism with support for
    generated header files.


Version 0.1.13

  * Requires GNU make 3.81beta3 or later.

  * Integrated config.guess & config.sub scripts for host/build configuration
    guessing.


Version 0.1.12

  * Requires -bk5-patched GNU make.

  * Multiple optimizations.

  * Preprocessor options are now explicitly propagated through import/export
    calls instead of order-only prerequisites.

  * Compiler library search paths are extracted and propagated to make. This
    ensures that `-lfoo' means the same no matter where it appears - in make
    rule or compiler command line.

  * Common shell dialog code has been factored out to build/dialog.bash and
    also made more robust with regards to wrong input and various path
    formats (e.g., both relative paths handling and tilde expansion are now
    supported).

  * Include function family now accepts lists of names.

  * Many important variables including `*_root', `*_base' and `project_name'
    are now exported by default (and thus available in configure scripts).


Version 0.1.11

  * Released to public.
